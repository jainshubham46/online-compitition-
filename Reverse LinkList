#include<iostream>
using namespace std;
class node{
	public:
	int data ;
	node*next;
	node(int val)
	{
	data=val;
	next=NULL;
	}
};
node* Reverse(node* &head)
{
	if(head==NULL||head->next==NULL)
	{return head;
	}
node* newhead=Reverse(head->next);
head->next->next=head;
head->next=NULL;
return newhead;
}


void insertAtHead(node* &head, int val){
	node* n=new node(val);


	n->next=head;
	head=n;
}
void insertAtTail(node* &head,int val)
{
	node* n=new node(val);
	if(head==NULL)
	{
		 head=n;
	
	return ;}
	node* temp =head;
	while(temp->next!=NULL)
	{
		temp=temp->next;
	}
temp->next=n;
}
bool search(node* head,int key)
{
	node* temp=head;
	while(temp !=NULL)
	{
		if(temp->data==key)
		{
			return true;
		}
	
		temp=temp->next;
	}
	return false;
}
void display(node*head){
node* temp=head;
while(temp!=NULL)
{
	cout<<temp->data<<"->";

temp=temp->next;
}cout<<"NULL"<<endl;
}
int main(){
	 node* head=NULL;
	insertAtTail(head,1);
	insertAtTail(head,2);
	insertAtTail(head,3);
	insertAtTail(head,4);
	insertAtTail(head,5);
	display(head);
	//insertAtHead(head,10);
	//display(head);
	//cout<<search(head,3);
	node* newhead=Reverse(head);
display(newhead);

	return 0;
	
}
