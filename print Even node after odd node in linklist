#include<iostream>
using namespace std;
class node{
	public:
	int data ;
	node*next;
	node(int val)
	{
	data=val;
	next=NULL;
	}
};

void evenafterodd(node* &head){
	node* odd=head;
	node* even=odd->next;
	node* evenstart=even;
	while(odd->next!=NULL && even->next!=NULL){
	
	odd->next=even->next;
	odd=odd->next;
	even->next=odd->next;
	even=even->next;
}
odd->next=evenstart;
if(odd->next==NULL)
even->next=NULL;
}




void insertAtHead(node* &head, int val){
	node* n=new node(val);


	n->next=head;
	head=n;
}
void insertAtTail(node* &head,int val)
{
	node* n=new node(val);
	if(head==NULL)
	{
		 head=n;
	
	return ;}
	node* temp =head;
	while(temp->next!=NULL)
	{
		temp=temp->next;
	}
temp->next=n;
}
bool search(node* head,int key)
{
	node* temp=head;
	while(temp !=NULL)
	{
		if(temp->data==key)
		{
			return true;
		}
	
		temp=temp->next;
	}
	return false;
}
void display(node*head){
node* temp=head;
while(temp!=NULL)
{
	cout<<temp->data<<"->";

temp=temp->next;
}cout<<"NULL"<<endl;
}
int main(){
	 node* head=NULL;
	int arr[6]={1,2,3,4,5,6};
	for(int i=0;i<6;i++ )
	{
	insertAtTail(head,arr[i]);
}
display(head);
evenafterodd(head);
display(head);
	return 0;
	
}
